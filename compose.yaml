
services:
  roki:
    image: pbench/roki:latest
    read_only: true
    volumes:
      - ./data/roki/:/data
    ports:
      - 3000:3000
      - 3001:3001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      gtfs_rt_feed_server:
        condition: service_healthy

  # a simple server that will be used by roki to download the 
  # gtfs_rt protobuf files in ./data/feed_server/
  gtfs_rt_feed_server:
    image: pbench/feed_server:latest
    read_only: true
    volumes: 
      - ./data/feed_server/:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  grafana:
    image: grafana/grafana-enterprise
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana/dashboard_provider.yaml:/etc/grafana/provisioning/dashboards/dashboard_provider.yaml
      - ./grafana/dashboard.json:/var/lib/grafana/dashboards/dashboard.json
    ports:
     - '3010:3000'

  prometheus:
    image: prom/prometheus
    volumes: 
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

